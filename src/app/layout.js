import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";
import {DataProvider} from "@/context/DataContext";
import {fromRecord} from "@/models/pageModel";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "The War Inside",
  description: "Generated by create next app",
};

async function fetchWebsiteStrings() {
  const res = await fetch(
    `https://api.airtable.com/v0/${process.env.AIRTABLE_BASE_ID}/${process.env.AIRTABLE_TABLE_NAME}`,
    {
      headers: {
        Authorization: `Bearer ${process.env.AIRTABLE_API_KEY}`,
      },
      cache: 'no-store',
    }
  );

  const data = await res.json();
  return data.records.map((record) => record.fields);
}
const airtableData = await fetchWebsiteStrings();
const mappedData = fromRecord(airtableData[0]); // you can map many if needed


export default function RootLayout({ children }) {
  return (
    <html lang="en">
       <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
        <Navbar title={mappedData.navBarTitle}/>
      <DataProvider initialData={mappedData}>
          {children}
      </DataProvider>
      </body>

    </html>
  );
}
